window.__NUXT__=(function(a,b){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1656834601",layout:"default",error:b,state:{articles:[],contents:{id:"mq7e9gok_67",createdAt:a,updatedAt:a,publishedAt:a,revisedAt:a,title:"PythonでAPIを作成してみた",body:"\u003Ch3 id=\"h8e3c8a0459\"\u003E今回はPythonでAPIサーバーを立ててみました。\u003C\u002Fh3\u003E\u003Cp\u003EライブラリにFlaskを用いました。\u003C\u002Fp\u003E\u003Cblockquote\u003Epip install Flask\u003C\u002Fblockquote\u003E\u003Cpre\u003E\u003Ccode\u003Efrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"\u002F\")\ndef hello():\n  return \"Hello World\"\nif __name__ == '_main_':\n  app.run()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E自分が気になったのは\u003C\u002Fp\u003E\u003Cblockquote\u003Eapp = Flask(name)\u003C\u002Fblockquote\u003E\u003Cp\u003Eこの部分でした。\u003Cbr\u003E結論からいうと、\u003Cstrong\u003EFlask(__name__)\u003C\u002Fstrong\u003E&nbsp;という行は、&nbsp;\u003Cstrong\u003EFlask\u003C\u002Fstrong\u003E&nbsp;クラスのインスタンスを作って、 app という変数に代入しています。 ... \u003Cstrong\u003Ename\u003C\u002Fstrong\u003E というのは、自動的に定義される変数で、現在のファイルのモジュール名が入ります。\u003Cbr\u003E要は、Flaskのインスタスの中に、自分の環境のファイルの名前が入るだけ！\u003Cbr\u003E他には、\u003C\u002Fp\u003E\u003Cblockquote\u003E@app.route(\"\u002F\")\u003C\u002Fblockquote\u003E\u003Cp\u003Eこれはルーティングを設定してるいるだけ。\u003Cbr\u003Eこの部分を増やすと、URLに応じたAPIができる\u003Cbr\u003E最後に、\u003C\u002Fp\u003E\u003Cblockquote\u003E&nbsp;if name == '\u003Cem\u003Emain\u003C\u002Fem\u003E'\u003C\u002Fblockquote\u003E\u003Cp\u003Eこれは、Pythonファイルが「\u003Cstrong\u003Epython ファイル名.py\u003C\u002Fstrong\u003E&nbsp;というふうに実行されているかどうか」を判定するif文です。\u003Cbr\u003Eもちろんなくても動くが、importした時にも動いてしまうから、\u003Cstrong\u003Epython ファイル名.py\u003C\u002Fstrong\u003E 以外で出力を起こさないようなイメージです。\u003C\u002Fp\u003E"}},serverRendered:true,routePath:"\u002Fmq7e9gok_67",config:{END_POINT:"blog",SERVICE_DOMAIN:"kinjyo",_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:b}}}}("2022-07-03T06:41:28.058Z",null));